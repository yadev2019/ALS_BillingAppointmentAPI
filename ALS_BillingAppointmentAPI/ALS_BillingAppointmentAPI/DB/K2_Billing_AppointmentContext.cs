// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace ALS_BillingAppointmentAPI.DB
{
    public partial class K2_Billing_AppointmentContext : DbContext
    {
        public K2_Billing_AppointmentContext()
        {
        }

        public K2_Billing_AppointmentContext(DbContextOptions<K2_Billing_AppointmentContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TbMCreditTerm> TbMCreditTerm { get; set; }
        public virtual DbSet<TbMDeliveryType> TbMDeliveryType { get; set; }
        public virtual DbSet<TbMStatus> TbMStatus { get; set; }
        public virtual DbSet<TbRBa> TbRBa { get; set; }
        public virtual DbSet<TbRCbBa> TbRCbBa { get; set; }
        public virtual DbSet<TbRCbInvoice> TbRCbInvoice { get; set; }
        public virtual DbSet<TbRCbPackage> TbRCbPackage { get; set; }
        public virtual DbSet<TbRInvoice> TbRInvoice { get; set; }
        public virtual DbSet<TbRPackage> TbRPackage { get; set; }
        public virtual DbSet<TbSBillingAppointmentReportData> TbSBillingAppointmentReportData { get; set; }
        public virtual DbSet<TbSBillingData> TbSBillingData { get; set; }
        public virtual DbSet<TbSConfig> TbSConfig { get; set; }
        public virtual DbSet<TbSInvoiceHeader> TbSInvoiceHeader { get; set; }
        public virtual DbSet<VBillingAppointment> VBillingAppointment { get; set; }
        public virtual DbSet<VBillingAppointmentBillToCompany> VBillingAppointmentBillToCompany { get; set; }
        public virtual DbSet<VCbBillingAppointment> VCbBillingAppointment { get; set; }
        public virtual DbSet<VCbPackageList> VCbPackageList { get; set; }
        public virtual DbSet<VPackage> VPackage { get; set; }
        public virtual DbSet<VPackageList> VPackageList { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<TbMCreditTerm>(entity =>
            {
                entity.HasKey(e => e.CreditTermId);

                entity.ToTable("TB_M_Credit_Term");

                entity.Property(e => e.CreditTermId)
                    .ValueGeneratedNever()
                    .HasColumnName("Credit_Term_ID");

                entity.Property(e => e.CreditCode)
                    .HasMaxLength(50)
                    .HasColumnName("Credit_Code");

                entity.Property(e => e.CreditTermValue)
                    .HasMaxLength(10)
                    .HasColumnName("Credit_Term_Value")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TbMDeliveryType>(entity =>
            {
                entity.HasKey(e => e.DeliveryTypeId);

                entity.ToTable("TB_M_Delivery_Type");

                entity.Property(e => e.DeliveryTypeId)
                    .ValueGeneratedNever()
                    .HasColumnName("Delivery_Type_ID");

                entity.Property(e => e.DeliveryCode)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Code");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");
            });

            modelBuilder.Entity<TbMStatus>(entity =>
            {
                entity.HasKey(e => e.StatusId);

                entity.ToTable("TB_M_STATUS");

                entity.Property(e => e.StatusId)
                    .ValueGeneratedNever()
                    .HasColumnName("STATUS_ID");

                entity.Property(e => e.Doctype)
                    .HasMaxLength(50)
                    .HasColumnName("DOCTYPE");

                entity.Property(e => e.DoctypeSub)
                    .HasMaxLength(50)
                    .HasColumnName("DOCTYPE_SUB");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(50)
                    .HasColumnName("STATUS_CODE");

                entity.Property(e => e.StatusName)
                    .HasMaxLength(100)
                    .HasColumnName("STATUS_NAME");
            });

            modelBuilder.Entity<TbRBa>(entity =>
            {
                entity.HasKey(e => e.BaId);

                entity.ToTable("TB_R_BA");

                entity.Property(e => e.BaId)
                    .ValueGeneratedNever()
                    .HasColumnName("BA_ID");

                entity.Property(e => e.BaNo)
                    .HasMaxLength(50)
                    .HasColumnName("BA_No");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.DeliveryLab)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Lab");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.InvoiceCustCode)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_Cust_Code");

                entity.Property(e => e.InvoiceNote)
                    .HasMaxLength(500)
                    .HasColumnName("Invoice_Note");

                entity.Property(e => e.InvoiceToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("Invoice_To_Address");

                entity.Property(e => e.InvoiceToComany)
                    .HasMaxLength(500)
                    .HasColumnName("Invoice_To_Comany");

                entity.Property(e => e.InvoiceToPerson)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_To_Person");

                entity.Property(e => e.InvoiceToTel)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_To_Tel");

                entity.Property(e => e.PackageId).HasColumnName("Package_ID");

                entity.Property(e => e.QuoteNo)
                    .HasMaxLength(50)
                    .HasColumnName("Quote_No");

                entity.Property(e => e.ReportToComany)
                    .HasMaxLength(500)
                    .HasColumnName("Report_To_Comany");

                entity.Property(e => e.ReportsToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("Reports_To_Address");

                entity.Property(e => e.ReportsToTel)
                    .HasMaxLength(50)
                    .HasColumnName("Reports_To_Tel");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("Status_Code");

                entity.Property(e => e.UpdateBy).HasMaxLength(50);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TbRCbBa>(entity =>
            {
                entity.HasKey(e => e.CbId);

                entity.ToTable("TB_R_CB_BA");

                entity.Property(e => e.CbId)
                    .ValueGeneratedNever()
                    .HasColumnName("CB_ID");

                entity.Property(e => e.CbCreateBy)
                    .HasMaxLength(50)
                    .HasColumnName("CB_CreateBy");

                entity.Property(e => e.CbCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_CreateDate");

                entity.Property(e => e.CbDeliveryLab)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Delivery_Lab");

                entity.Property(e => e.CbDeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Delivery_Type");

                entity.Property(e => e.CbInvoiceCustCode)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_Cust_Code");

                entity.Property(e => e.CbInvoiceNote)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Invoice_Note");

                entity.Property(e => e.CbInvoiceToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Invoice_To_Address");

                entity.Property(e => e.CbInvoiceToComany)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Invoice_To_Comany");

                entity.Property(e => e.CbInvoiceToPerson)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_To_Person");

                entity.Property(e => e.CbInvoiceToTel)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_To_Tel");

                entity.Property(e => e.CbNo)
                    .HasMaxLength(50)
                    .HasColumnName("CB_No");

                entity.Property(e => e.CbPackageId).HasColumnName("CB_Package_ID");

                entity.Property(e => e.CbQuoteNo)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Quote_No");

                entity.Property(e => e.CbReportToComany)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Report_To_Comany");

                entity.Property(e => e.CbReportsToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Reports_To_Address");

                entity.Property(e => e.CbReportsToTel)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Reports_To_Tel");

                entity.Property(e => e.CbStatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("CB_Status_Code");

                entity.Property(e => e.CbUpdateBy)
                    .HasMaxLength(50)
                    .HasColumnName("CB_UpdateBy");

                entity.Property(e => e.CbUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_UpdateDate");
            });

            modelBuilder.Entity<TbRCbInvoice>(entity =>
            {
                entity.HasKey(e => e.CbInvoiceId);

                entity.ToTable("TB_R_CB_INVOICE");

                entity.Property(e => e.CbInvoiceId)
                    .ValueGeneratedNever()
                    .HasColumnName("CB_Invoice_ID");

                entity.Property(e => e.CbBillToCompany)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Bill_To_Company");

                entity.Property(e => e.CbCustCode)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Cust_Code");

                entity.Property(e => e.CbDeliveryAddress)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Delivery_Address");

                entity.Property(e => e.CbDeliveryToPerson)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Delivery_To_Person");

                entity.Property(e => e.CbDeliveryToTel)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Delivery_To_Tel");

                entity.Property(e => e.CbId).HasColumnName("CB_ID");

                entity.Property(e => e.CbInvoiceDateOverride)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_Invoice_Date_Override");

                entity.Property(e => e.CbInvoiceIssueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_Invoice_Issue_Date");

                entity.Property(e => e.CbInvoiceNo)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_No");

                entity.Property(e => e.CbReportToComany)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Report_To_Comany");

                entity.Property(e => e.CbReportsToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Reports_To_Address");

                entity.Property(e => e.CbReportsToTel)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Reports_To_Tel");

                entity.Property(e => e.CbTotalInvoiceAmountIncVat)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("CB_Total_Invoice_Amount_Inc_Vat");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.CreditTerm).HasMaxLength(10);

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("Status_Code");

                entity.Property(e => e.UpdateBy).HasMaxLength(50);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TbRCbPackage>(entity =>
            {
                entity.HasKey(e => e.CbPackageId);

                entity.ToTable("TB_R_CB_PACKAGE");

                entity.Property(e => e.CbPackageId)
                    .ValueGeneratedNever()
                    .HasColumnName("CB_Package_ID");

                entity.Property(e => e.CbInvoiceDeliveryLab)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_Delivery_Lab");

                entity.Property(e => e.CbInvoiceDeliveryPhone)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_Delivery_Phone");

                entity.Property(e => e.CbInvoiceDeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_Delivery_Type");

                entity.Property(e => e.CbInvoiceToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Invoice_To_Address");

                entity.Property(e => e.CbInvoiceToCompany)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Invoice_To_Company");

                entity.Property(e => e.CbInvoiceToCustCode)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_To_Cust_Code");

                entity.Property(e => e.CbInvoiceToPerson)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_To_Person");

                entity.Property(e => e.CbLogisticsDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_Logistics_Delivery_Date");

                entity.Property(e => e.CbPackageDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_Package_Delivery_Date");

                entity.Property(e => e.CbPackageDesc)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Package_DESC");

                entity.Property(e => e.CbPackageName)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Package_Name");

                entity.Property(e => e.CbPackageNo)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Package_No");

                entity.Property(e => e.CbStatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("CB_Status_Code");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.UpdateBy).HasMaxLength(50);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TbRInvoice>(entity =>
            {
                entity.HasKey(e => e.InvoiceId);

                entity.ToTable("TB_R_INVOICE");

                entity.Property(e => e.InvoiceId)
                    .ValueGeneratedNever()
                    .HasColumnName("Invoice_ID");

                entity.Property(e => e.BaId).HasColumnName("BA_ID");

                entity.Property(e => e.BillToCompany)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Company");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.CreditTerm).HasMaxLength(10);

                entity.Property(e => e.CustCode)
                    .HasMaxLength(50)
                    .HasColumnName("Cust_Code");

                entity.Property(e => e.DeliveryAddress)
                    .HasMaxLength(500)
                    .HasColumnName("Delivery_Address");

                entity.Property(e => e.DeliveryToPerson)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_To_Person");

                entity.Property(e => e.DeliveryToTel)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_To_Tel");

                entity.Property(e => e.InvoiceDateOverride)
                    .HasColumnType("datetime")
                    .HasColumnName("Invoice_Date_Override");

                entity.Property(e => e.InvoiceIssueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Invoice_Issue_Date");

                entity.Property(e => e.InvoiceNo)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_No");

                entity.Property(e => e.ReportToComany)
                    .HasMaxLength(50)
                    .HasColumnName("Report_To_Comany");

                entity.Property(e => e.ReportsToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("Reports_To_Address");

                entity.Property(e => e.ReportsToTel)
                    .HasMaxLength(50)
                    .HasColumnName("Reports_To_Tel");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("Status_Code");

                entity.Property(e => e.TotalInvoiceAmountIncVat)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Total_Invoice_Amount_Inc_Vat");

                entity.Property(e => e.UpdateBy).HasMaxLength(50);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TbRPackage>(entity =>
            {
                entity.HasKey(e => e.PackageId);

                entity.ToTable("TB_R_PACKAGE");

                entity.Property(e => e.PackageId)
                    .ValueGeneratedNever()
                    .HasColumnName("Package_ID");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.InvoiceDeliveryLab)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_Delivery_Lab");

                entity.Property(e => e.InvoiceDeliveryPhone)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_Delivery_Phone");

                entity.Property(e => e.InvoiceDeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_Delivery_Type");

                entity.Property(e => e.InvoiceToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("Invoice_To_Address");

                entity.Property(e => e.InvoiceToCompany)
                    .HasMaxLength(500)
                    .HasColumnName("Invoice_To_Company");

                entity.Property(e => e.InvoiceToCustCode)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_To_Cust_Code");

                entity.Property(e => e.InvoiceToPerson)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_To_Person");

                entity.Property(e => e.LogisticsDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Logistics_Delivery_Date");

                entity.Property(e => e.PackageDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Package_Delivery_Date");

                entity.Property(e => e.PackageDesc)
                    .HasMaxLength(500)
                    .HasColumnName("Package_DESC");

                entity.Property(e => e.PackageName)
                    .HasMaxLength(50)
                    .HasColumnName("Package_Name");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .HasColumnName("Package_No");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("Status_Code");

                entity.Property(e => e.UpdateBy).HasMaxLength(50);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TbSBillingAppointmentReportData>(entity =>
            {
                entity.ToTable("TB_S_BillingAppointmentReportData");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.CeateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TbSBillingData>(entity =>
            {
                entity.ToTable("TB_S_BillingData");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Afenumber).HasColumnName("AFENumber");

                entity.Property(e => e.CoCfile).HasColumnName("CoCFile");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.Glaccount).HasColumnName("GLAccount");

                entity.Property(e => e.InvoiceFile).IsRequired();

                entity.Property(e => e.InvoiceNumber)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.LegalSiteDescriptionLsd).HasColumnName("LegalSiteDescriptionLSD");

                entity.Property(e => e.NavaccountNumber)
                    .HasMaxLength(10)
                    .HasColumnName("NAVAccountNumber")
                    .IsFixedLength(true);

                entity.Property(e => e.Project)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.Site)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.Workorder)
                    .HasMaxLength(10)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TbSConfig>(entity =>
            {
                entity.HasKey(e => e.ConfigId);

                entity.ToTable("TB_S_CONFIG");

                entity.Property(e => e.ConfigId)
                    .ValueGeneratedNever()
                    .HasColumnName("Config_ID");

                entity.Property(e => e.ConfigName)
                    .HasMaxLength(50)
                    .HasColumnName("Config_Name");

                entity.Property(e => e.ConfigValue)
                    .HasMaxLength(50)
                    .HasColumnName("Config_Value");
            });

            modelBuilder.Entity<TbSInvoiceHeader>(entity =>
            {
                entity.ToTable("TB_S_InvoiceHeader");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<VBillingAppointment>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vBillingAppointment");

                entity.Property(e => e.BaId).HasColumnName("BA_ID");

                entity.Property(e => e.BaNo)
                    .HasMaxLength(50)
                    .HasColumnName("BA_No");

                entity.Property(e => e.BillToCompany)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Company");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.DeliveryName)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Name");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.DiffAddress)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.InvoiceCustCode)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_Cust_Code");

                entity.Property(e => e.InvoiceId).HasColumnName("Invoice_ID");

                entity.Property(e => e.InvoiceNo)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_No");

                entity.Property(e => e.InvoiceNote)
                    .HasMaxLength(500)
                    .HasColumnName("Invoice_Note");

                entity.Property(e => e.InvoiceToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("Invoice_To_Address");

                entity.Property(e => e.PackageId).HasColumnName("Package_ID");

                entity.Property(e => e.QuoteNo)
                    .HasMaxLength(50)
                    .HasColumnName("Quote_No");

                entity.Property(e => e.ReportsToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("Reports_To_Address");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("Status_Code");

                entity.Property(e => e.StatusName)
                    .HasMaxLength(100)
                    .HasColumnName("STATUS_NAME");

                entity.Property(e => e.UpdateBy).HasMaxLength(50);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<VBillingAppointmentBillToCompany>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vBillingAppointment_BillToCompany");

                entity.Property(e => e.BillToCompany)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Company");
            });

            modelBuilder.Entity<VCbBillingAppointment>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCB_BillingAppointment");

                entity.Property(e => e.CbBillToCompany)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Bill_To_Company");

                entity.Property(e => e.CbCreateBy)
                    .HasMaxLength(50)
                    .HasColumnName("CB_CreateBy");

                entity.Property(e => e.CbCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_CreateDate");

                entity.Property(e => e.CbDeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Delivery_Type");

                entity.Property(e => e.CbId).HasColumnName("CB_ID");

                entity.Property(e => e.CbInvoiceCustCode)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_Cust_Code");

                entity.Property(e => e.CbInvoiceId).HasColumnName("CB_Invoice_ID");

                entity.Property(e => e.CbInvoiceNo)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Invoice_No");

                entity.Property(e => e.CbInvoiceNote)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Invoice_Note");

                entity.Property(e => e.CbInvoiceToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Invoice_To_Address");

                entity.Property(e => e.CbNo)
                    .HasMaxLength(50)
                    .HasColumnName("CB_No");

                entity.Property(e => e.CbPackageId).HasColumnName("CB_Package_ID");

                entity.Property(e => e.CbQuoteNo)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Quote_No");

                entity.Property(e => e.CbReportsToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("CB_Reports_To_Address");

                entity.Property(e => e.CbStatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("CB_Status_Code");

                entity.Property(e => e.CbUpdateBy)
                    .HasMaxLength(50)
                    .HasColumnName("CB_UpdateBy");

                entity.Property(e => e.CbUpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_UpdateDate");

                entity.Property(e => e.DeliveryName)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Name");

                entity.Property(e => e.DiffAddress)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.StatusName)
                    .HasMaxLength(100)
                    .HasColumnName("STATUS_NAME");
            });

            modelBuilder.Entity<VCbPackageList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCB_PackageList");

                entity.Property(e => e.CbLogisticsDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_Logistics_Delivery_Date");

                entity.Property(e => e.CbPackageDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CB_Package_Delivery_Date");

                entity.Property(e => e.CbPackageId).HasColumnName("CB_Package_ID");

                entity.Property(e => e.CbPackageName)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Package_Name");

                entity.Property(e => e.CbPackageNo)
                    .HasMaxLength(50)
                    .HasColumnName("CB_Package_No");

                entity.Property(e => e.CbStatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("CB_Status_Code");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.StatusName)
                    .HasMaxLength(100)
                    .HasColumnName("STATUS_NAME");
            });

            modelBuilder.Entity<VPackage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPackage");

                entity.Property(e => e.BaCreateBy)
                    .HasMaxLength(50)
                    .HasColumnName("BA_CreateBy");

                entity.Property(e => e.BaCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BA_CreateDate");

                entity.Property(e => e.BaId).HasColumnName("BA_ID");

                entity.Property(e => e.BaNo)
                    .HasMaxLength(50)
                    .HasColumnName("BA_No");

                entity.Property(e => e.BillToCompany)
                    .HasMaxLength(500)
                    .HasColumnName("Bill_To_Company");

                entity.Property(e => e.CreditTerm).HasMaxLength(10);

                entity.Property(e => e.CustCode)
                    .HasMaxLength(50)
                    .HasColumnName("Cust_Code");

                entity.Property(e => e.DeliveryAddress)
                    .HasMaxLength(500)
                    .HasColumnName("Delivery_Address");

                entity.Property(e => e.DeliveryToPerson)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_To_Person");

                entity.Property(e => e.DeliveryToTel)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_To_Tel");

                entity.Property(e => e.DeliveryType)
                    .HasMaxLength(50)
                    .HasColumnName("Delivery_Type");

                entity.Property(e => e.DiffAddress)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Expr1).HasMaxLength(100);

                entity.Property(e => e.InvCreateBy)
                    .HasMaxLength(50)
                    .HasColumnName("inv_CreateBy");

                entity.Property(e => e.InvCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("inv_CreateDate");

                entity.Property(e => e.InvoiceDateOverride)
                    .HasColumnType("datetime")
                    .HasColumnName("Invoice_Date_Override");

                entity.Property(e => e.InvoiceId).HasColumnName("Invoice_ID");

                entity.Property(e => e.InvoiceIssueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Invoice_Issue_Date");

                entity.Property(e => e.InvoiceNo)
                    .HasMaxLength(50)
                    .HasColumnName("Invoice_No");

                entity.Property(e => e.InvoiceNote)
                    .HasMaxLength(500)
                    .HasColumnName("Invoice_Note");

                entity.Property(e => e.LogisticsDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Logistics_Delivery_Date");

                entity.Property(e => e.PackCreateBy)
                    .HasMaxLength(50)
                    .HasColumnName("pack_CreateBy");

                entity.Property(e => e.PackCreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("pack_CreateDate");

                entity.Property(e => e.PackageDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Package_Delivery_Date");

                entity.Property(e => e.PackageId).HasColumnName("Package_ID");

                entity.Property(e => e.PackageName)
                    .HasMaxLength(50)
                    .HasColumnName("Package_Name");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .HasColumnName("Package_No");

                entity.Property(e => e.QuoteNo)
                    .HasMaxLength(50)
                    .HasColumnName("Quote_No");

                entity.Property(e => e.ReportToComany)
                    .HasMaxLength(50)
                    .HasColumnName("Report_To_Comany");

                entity.Property(e => e.ReportsToAddress)
                    .HasMaxLength(500)
                    .HasColumnName("Reports_To_Address");

                entity.Property(e => e.ReportsToTel)
                    .HasMaxLength(50)
                    .HasColumnName("Reports_To_Tel");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("Status_Code");

                entity.Property(e => e.StatusName)
                    .HasMaxLength(50)
                    .HasColumnName("Status_Name");

                entity.Property(e => e.TotalInvoiceAmountIncVat)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Total_Invoice_Amount_Inc_Vat");
            });

            modelBuilder.Entity<VPackageList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPackageList");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.LogisticsDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Logistics_Delivery_Date");

                entity.Property(e => e.PackageDeliveryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Package_Delivery_Date");

                entity.Property(e => e.PackageId).HasColumnName("Package_ID");

                entity.Property(e => e.PackageName)
                    .HasMaxLength(50)
                    .HasColumnName("Package_Name");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .HasColumnName("Package_No");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .HasColumnName("Status_Code");

                entity.Property(e => e.StatusName)
                    .HasMaxLength(100)
                    .HasColumnName("STATUS_NAME");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}